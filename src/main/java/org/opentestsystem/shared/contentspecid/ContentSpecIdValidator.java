package org.opentestsystem.shared.contentspecid;

import org.opentestsystem.shared.contentspecid.enums.ContentSpecClaim;
import org.opentestsystem.shared.contentspecid.enums.ContentSpecFormat;
import org.opentestsystem.shared.contentspecid.enums.ContentSpecGrade;
import org.opentestsystem.shared.contentspecid.enums.ContentSpecSubject;
import org.opentestsystem.shared.contentspecid.exceptions.ErrorSeverity;
import org.opentestsystem.shared.contentspecid.exceptions.IdValidationException;

import static org.apache.commons.lang3.StringUtils.isBlank;

/**
 * Validator for Content Spec IDs. Determines if an ID object has enough information to be formatted into
 * the requested format.
 */
public class ContentSpecIdValidator {
    public void validateFor(ContentSpecId id, ContentSpecFormat format) throws IdValidationException {
        // Check for general validity
        validate();

        // Check for valid format and for subject match
        boolean requiresDetail = format.isLegacy();

        switch (format) {
            case ENHANCED:
                if (id.getSubject() == ContentSpecSubject.UNSPECIFIED) {
                    throw new IdValidationException(ErrorSeverity.INVALID, "Subject is Unspecified.");
                }
                break;

            case ELA_V1:
                if (!id.isEla()) {
                    throw new IdValidationException(ErrorSeverity.INVALID, "For format ElaV1, Subject must be ELA.");
                }
                break;

            case MATH_V4:
            case MATH_V5:
            case MATH_V6:
                if (!id.isMath()) {
                    throw new IdValidationException(ErrorSeverity.INVALID,
                            String.format("For format %s, Subject must be Math.", format.name()));
                }
                break;

            default:
                throw new IdValidationException(ErrorSeverity.INVALID, String.format("Invalid format '%s'.", format));
        }

        if (requiresDetail) {
            if (id.getGrade() == ContentSpecGrade.UNSPECIFIED) {
                throw new IdValidationException(ErrorSeverity.INVALID,
                        String.format("For format %s, Grade must be specified.", format.name()));
            }

            if (id.getClaim() == ContentSpecClaim.UNSPECIFIED) {
                throw new IdValidationException(ErrorSeverity.INVALID,
                        String.format("For format %s, Claim must be specified.", format.name()));
            }

            if (isBlank(id.getTarget())) {
                throw new IdValidationException(ErrorSeverity.INVALID,
                        String.format("For format %s, Target must be specified.", format.name()));
            }
        }
    }

    // TODO: seems to be incorrect. There are IDs in the "good" test files that would fail this validation.
    private void validate() { //throws IdValidationException {
//        if (subject == ContentSpecSubject.UNSPECIFIED) {
//            throw new IdValidationException(INVALID, "Subject is not valid.");
//        }
//
//        if (grade == ContentSpecGrade.UNSPECIFIED) {
//            throw new IdValidationException(INVALID, "Grade is not valid.");
//        }
//
//        if (claim == ContentSpecClaim.UNSPECIFIED) {
//            throw new IdValidationException(INVALID, "Claim is not valid.");
//        }
//
//        if (isBlank(target)) {
//            throw new IdValidationException(INVALID, "Target has not been specified.");
//        }
//
//        if (isBlank(ccss) &&
//                ((subject == ContentSpecSubject.ELA) ||
//                        (subject == ContentSpecSubject.MATH && claim == ContentSpecClaim.C1))) {
//            throw new IdValidationException(INVALID, "CCSS has not been specified.");
//        }
    }

}
