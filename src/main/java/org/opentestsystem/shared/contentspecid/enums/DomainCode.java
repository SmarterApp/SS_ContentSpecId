package org.opentestsystem.shared.contentspecid.enums;

import static org.apache.commons.lang3.StringUtils.isBlank;

/**
 * Enum for domain codes for Content Spec ID
 */
public enum DomainCode {
    UNK,   // Unknown / Unspecified
    NA,     // Not applicable

    // ELA Domains
    RL,     // Reading Literary Texts
    RI,     // Reading Informational Texts
    WN,     // Writing Narrative
    WI,     // Writing Informational (Grades 3-5)
    WO,     // Writing Opinion (Grades 3-5)
    WE,     // Writing Explanatory (Grades 6-HS)
    WA,     // Writing Argumentative (Grades 6-HS)
    WG,     // Writing General
    SL,     // Speaking and Listening
    R,      // Research / Inquiry

    // Math Domains
    SP,    // Statistics & Probability
    OA,    // Operations and Algebraic Thinking
    NBT,   // Number and Operations - Base 10
    NF,    // Number and Operations - Fractions
    MD,    // Measurement and Data
    G,     // Geometry
    F,     // Functions
    RP,    // Ratios and Proportional Relationships
    NS,    // The Number System
    EE,    // Expressions & Equations

    // High School Math Conceptual Categories
    N,     // Number and Quantity
    A,     // Algebra
    S;     // Statistics and Probability

    // High School Math Conceptual Categories already included in the domains
    // F           // Functions
    // G           // Geometry

    public String getValue() {
        return this == UNK ? "" : this.name();
    }

    public String getLegacyValue() {
        switch (this) {
            case RL:
                return "LT"; // Reading Literary Texts
            case RI:
                return "IT"; // Reading Informational Texts
            case WN:
            case WI:
            case WO:
            case WE:
            case WA:
            case WG:
                return "W"; // Writing
            case SL:
                return "L"; // Listening
            case R:
                return "CR"; // Research & Inquiry - Communicating Reasoning
            default:
                return getValue();
        }
    }

    public static DomainCode fromString(String s) {
        if (isBlank(s)) {
            return UNK;
        }

        String domainString = s.trim();

        try {
            return valueOf(domainString.toUpperCase());
        } catch (IllegalArgumentException e) {
            // Check against legacy values
            for (DomainCode domain : values()) {
                if (domainString.equalsIgnoreCase(domain.getLegacyValue())) {
                    return domain;
                }
            }
        }

        return UNK;
    }
}

