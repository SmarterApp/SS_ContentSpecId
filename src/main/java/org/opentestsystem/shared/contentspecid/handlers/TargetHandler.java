package org.opentestsystem.shared.contentspecid.handlers;

import org.opentestsystem.shared.contentspecid.enums.ContentSpecGrade;

import java.util.HashMap;
import java.util.Map;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import static org.apache.commons.lang3.StringUtils.isBlank;

/**
 * Helper class for deriving target and target set values.
 */
public class TargetHandler {
    private static final Pattern ELA_TARGET_REGEX = Pattern.compile("C?(\\d+)[a-z]?");
    private static final Pattern MATH_TARGET_REGEX = Pattern.compile("T?([A-Z])");
    private static final int MAX_ELA_TARGET = 14;
    private static final int MAX_MATH_TARGET = 16;


    public static final int BAD_TARGET_VALUE = 0;

    private static final Map<ContentSpecGrade, int []> MATH_TARGET_SET_MAP = new HashMap<>();

    static {
        // Populate target sets for grades 3 through 8 and high school with arrays for targets 1 - 16
        MATH_TARGET_SET_MAP.put(ContentSpecGrade.G3,
                new int[] { 3 ,1 ,1 ,2 ,4 ,2 ,1 ,5 ,1 ,4 ,4 ,0 ,0 ,0 ,0 ,0 });
        MATH_TARGET_SET_MAP.put(ContentSpecGrade.G4,
                new int[] { 1 ,6 ,6 ,3 ,1 ,1 ,2 ,4 ,5 ,6 ,5 ,7 ,0 ,0 ,0 ,0 });
        MATH_TARGET_SET_MAP.put(ContentSpecGrade.G5,
                new int[] { 5 ,5 ,3 ,3 ,1 ,2 ,5 ,5 ,1 ,4 ,4 ,0 ,0 ,0 ,0 ,0 });
        MATH_TARGET_SET_MAP.put(ContentSpecGrade.G6,
                new int[] { 2 ,3 ,5 ,4 ,1 ,1 ,3 ,5 ,5 ,5 ,0 ,0 ,0 ,0 ,0 ,0 });
        MATH_TARGET_SET_MAP.put(ContentSpecGrade.G7,
                new int[] { 1 ,2 ,2 ,1 ,3 ,3 ,4 ,4 ,4 ,0 ,0 ,0 ,0 ,0 ,0 ,0 });
        MATH_TARGET_SET_MAP.put(ContentSpecGrade.G8,
                new int[] { 4 ,2 ,1 ,1 ,2 ,3 ,2 ,3 ,4 ,4 ,0 ,0 ,0 ,0 ,0 ,0 });
        MATH_TARGET_SET_MAP.put(ContentSpecGrade.GHS,
                new int[] { 9 ,9,10 ,1 ,1 ,2 ,3 ,3 ,3 ,4 ,5 ,6 ,6 ,6 ,7 ,8 });
    }

    public static int computeElaTargetValue(String target) {
        if (isBlank(target)) {
            return BAD_TARGET_VALUE;
        }

        Matcher matcher = ELA_TARGET_REGEX.matcher(target);
        if (matcher.find()) {
            try {
                int value = Integer.parseInt(matcher.group(1));
                return (value < 1 || value > MAX_ELA_TARGET) ? BAD_TARGET_VALUE : value;
            } catch (NumberFormatException nfe) {
                // Fall through to return BAD_TARGET_VALUE
            }
        }

        return BAD_TARGET_VALUE;
    }

    public static char getMathTargetChar(String target) {
        Matcher matcher = MATH_TARGET_REGEX.matcher(target);
        if (matcher.find()) {
            char targetChar = matcher.group(1).charAt(0);
            if (targetChar >= 'A' && targetChar < 'A' + MAX_MATH_TARGET) {
                return targetChar;
            }
        }
        return (char)BAD_TARGET_VALUE;
    }

    public int getMathTargetSet(ContentSpecGrade grade, String target) {
        if (MATH_TARGET_SET_MAP.containsKey(grade)) {
            char targetValue = getMathTargetChar(target);
            int index = targetValue - 'A';

            int [] targetSet = MATH_TARGET_SET_MAP.get(grade);
            if (index >= 0 && index < targetSet.length) {
                return targetSet[index];
            }
        }

        return 0;
    }
}
