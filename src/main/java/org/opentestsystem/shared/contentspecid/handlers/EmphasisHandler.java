package org.opentestsystem.shared.contentspecid.handlers;

import org.opentestsystem.shared.contentspecid.enums.Emphasis;
import org.opentestsystem.shared.contentspecid.enums.ContentSpecGrade;

import java.util.HashMap;
import java.util.Map;

import static org.apache.commons.lang3.StringUtils.isNotBlank;
import static org.opentestsystem.shared.contentspecid.enums.Emphasis.AS;
import static org.opentestsystem.shared.contentspecid.enums.Emphasis.M;
import static org.opentestsystem.shared.contentspecid.handlers.TargetHandler.getMathTargetChar;

/**
 * Helper for deriving emphasis for an ID.
 */
public class EmphasisHandler {
    private static final Map<ContentSpecGrade, Emphasis[]> MATH_EMPHASIS_MAP = new HashMap<>();

    static {
        // Populate emphases for grades 3 through 8 for targets 1 - 12 plus high school with arrays for targets 1 - 16
        MATH_EMPHASIS_MAP.put(ContentSpecGrade.G3,
                new Emphasis[] {  M,  M,  M,  M, AS,  M,  M, AS,  M, AS, AS, AS });
        MATH_EMPHASIS_MAP.put(ContentSpecGrade.G4,
                new Emphasis[] {  M, AS, AS,  M,  M,  M,  M,  M, AS, AS, AS, AS });
        MATH_EMPHASIS_MAP.put(ContentSpecGrade.G5,
                new Emphasis[] { AS, AS,  M,  M,  M,  M, AS, AS,  M, AS, AS, AS });
        MATH_EMPHASIS_MAP.put(ContentSpecGrade.G6,
                new Emphasis[] {  M,  M, AS,  M,  M,  M,  M, AS, AS, AS, AS, AS });
        MATH_EMPHASIS_MAP.put(ContentSpecGrade.G7,
                new Emphasis[] {  M,  M,  M,  M, AS, AS, AS, AS, AS, AS, AS, AS });
        MATH_EMPHASIS_MAP.put(ContentSpecGrade.G8,
                new Emphasis[] { AS,  M,  M,  M,  M,  M,  M,  M, AS, AS, AS, AS });

        MATH_EMPHASIS_MAP.put(ContentSpecGrade.GHS,
                new Emphasis[] { AS, AS, AS, M, M, M, M, M, M, M, M, M, M, M, AS, AS });
    }

    /**
     * Computes the emphasis of an ID based on grade, target, and in one edge case, ccss. This method is only
     * relevant for IDs that have subject Math and Claim C1.
     *
     * @param grade the grade level 1 - 12, K or HS
     * @param target the IDs target code
     * @param ccss the ccss information used in one special case
     *
     * @return Emphasis, with the default AS.
     */
    public Emphasis computeEmphasis(ContentSpecGrade grade, String target, String ccss) {
        Emphasis emphasis = AS;

        char targetChar = getMathTargetChar(target);
        if (targetChar == 'O' && isNotBlank(ccss) && !ccss.startsWith("G-SRT")) {
            // This is an odd case. Sometimes when recording secondary alignment to a CCSS
            // standard that's not referenced in teh content specification, staff have used
            // a target of "O" for "Other". Usually, and preferably, they have used a target
            // of "X". The trouble with "O" is that it's a legitimate target and is "m"
            // whereas other alignments should be "a/s". We solve this by looking at the CCSS
            // alignment. If it does not start with "G-SRT" which is the proper standard for
            // target "O" then we set the emphasis to "a/s".
            emphasis = AS;
        } else if (MATH_EMPHASIS_MAP.containsKey(grade)) {
            Emphasis[] emphasisByGrade = MATH_EMPHASIS_MAP.get(grade);
            int index  = targetChar - 'A';
            if (index >= 0 && index < emphasisByGrade.length) {
                emphasis = emphasisByGrade[index];
            }
        }

        return emphasis;
    }
}
